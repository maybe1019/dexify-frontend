/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../common';
import type {
  CompoundAdapter,
  CompoundAdapterInterface,
} from '../CompoundAdapter';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_integrationManager',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_compoundPriceFeed',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_wethToken',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'ADD_TRACKED_ASSETS_SELECTOR',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'APPROVE_ASSETS_SELECTOR',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'CLAIM_REWARDS_AND_REINVEST_SELECTOR',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'CLAIM_REWARDS_AND_SWAP_SELECTOR',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'CLAIM_REWARDS_SELECTOR',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'LEND_AND_STAKE_SELECTOR',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'LEND_SELECTOR',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'REDEEM_SELECTOR',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'REMOVE_TRACKED_ASSETS_SELECTOR',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'STAKE_SELECTOR',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'TAKE_ORDER_SELECTOR',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'UNSTAKE_AND_REDEEM_SELECTOR',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'UNSTAKE_SELECTOR',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCompoundPriceFeed',
    outputs: [
      {
        internalType: 'address',
        name: 'compoundPriceFeed_',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getIntegrationManager',
    outputs: [
      {
        internalType: 'address',
        name: 'integrationManager_',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getWethToken',
    outputs: [
      {
        internalType: 'address',
        name: 'wethToken_',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'identifier',
    outputs: [
      {
        internalType: 'string',
        name: 'identifier_',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_vaultProxy',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
      {
        internalType: 'bytes',
        name: '_encodedAssetTransferArgs',
        type: 'bytes',
      },
    ],
    name: 'lend',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: '_selector',
        type: 'bytes4',
      },
      {
        internalType: 'bytes',
        name: '_encodedCallArgs',
        type: 'bytes',
      },
    ],
    name: 'parseAssetsForMethod',
    outputs: [
      {
        internalType: 'enum IIntegrationManager.SpendAssetsHandleType',
        name: 'spendAssetsHandleType_',
        type: 'uint8',
      },
      {
        internalType: 'address[]',
        name: 'spendAssets_',
        type: 'address[]',
      },
      {
        internalType: 'uint256[]',
        name: 'spendAssetAmounts_',
        type: 'uint256[]',
      },
      {
        internalType: 'address[]',
        name: 'incomingAssets_',
        type: 'address[]',
      },
      {
        internalType: 'uint256[]',
        name: 'minIncomingAssetAmounts_',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_vaultProxy',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
      {
        internalType: 'bytes',
        name: '_encodedAssetTransferArgs',
        type: 'bytes',
      },
    ],
    name: 'redeem',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    stateMutability: 'payable',
    type: 'receive',
  },
];

const _bytecode =
  '0x60e060405234801561001057600080fd5b50604051611e37380380611e378339818101604052606081101561003357600080fd5b50805160208201516040909201516001600160601b0319606092831b811660805292821b831660a052901b1660c05260805160601c60a05160601c60c05160601c611d786100bf6000398061085352806108a15280610b9252806112af52806112f4525080610b025280610c465280610e915250806106ea52806110d752806113c75250611d786000f3fe6080604052600436106101235760003560e01c806376cc7ac6116100a0578063e27a06b511610064578063e27a06b514610652578063e4d9047814610667578063e7c456901461067c578063f075399414610691578063f7d882b5146106a65761012a565b806376cc7ac6146103025780637998a1c4146104c3578063863e5ad01461054d578063b23228cf14610562578063c29fa9dd146105775761012a565b80633ffc1591116100e75780633ffc15911461029957806340da225d146102ae57806340f8cfcf146102c35780634c252f91146102d85780635ca62b3c146102ed5761012a565b8063080456c11461012f578063099f751514610161578063131461c01461023e578063257cb1a31461025357806332bf8227146102685761012a565b3661012a57005b600080fd5b34801561013b57600080fd5b506101446106bb565b604080516001600160e01b03199092168252519081900360200190f35b34801561016d57600080fd5b5061023c6004803603606081101561018457600080fd5b6001600160a01b038235169190810190604081016020820135600160201b8111156101ae57600080fd5b8201836020820111156101c057600080fd5b803590602001918460018302840111600160201b831117156101e157600080fd5b919390929091602081019035600160201b8111156101fe57600080fd5b82018360208201111561021057600080fd5b803590602001918460018302840111600160201b8311171561023157600080fd5b5090925090506106df565b005b34801561024a57600080fd5b50610144610ab8565b34801561025f57600080fd5b50610144610adc565b34801561027457600080fd5b5061027d610b00565b604080516001600160a01b039092168252519081900360200190f35b3480156102a557600080fd5b50610144610b24565b3480156102ba57600080fd5b50610144610b48565b3480156102cf57600080fd5b50610144610b6c565b3480156102e457600080fd5b5061027d610b90565b3480156102f957600080fd5b50610144610bb4565b34801561030e57600080fd5b5061038e6004803603604081101561032557600080fd5b6001600160e01b03198235169190810190604081016020820135600160201b81111561035057600080fd5b82018360208201111561036257600080fd5b803590602001918460018302840111600160201b8311171561038357600080fd5b509092509050610bd8565b6040518086600381111561039e57fe5b815260200180602001806020018060200180602001858103855289818151815260200191508051906020019060200280838360005b838110156103eb5781810151838201526020016103d3565b50505050905001858103845288818151815260200191508051906020019060200280838360005b8381101561042a578181015183820152602001610412565b50505050905001858103835287818151815260200191508051906020019060200280838360005b83811015610469578181015183820152602001610451565b50505050905001858103825286818151815260200191508051906020019060200280838360005b838110156104a8578181015183820152602001610490565b50505050905001995050505050505050505060405180910390f35b3480156104cf57600080fd5b506104d8611062565b6040805160208082528351818301528351919283929083019185019080838360005b838110156105125781810151838201526020016104fa565b50505050905090810190601f16801561053f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561055957600080fd5b50610144611084565b34801561056e57600080fd5b506101446110a8565b34801561058357600080fd5b5061023c6004803603606081101561059a57600080fd5b6001600160a01b038235169190810190604081016020820135600160201b8111156105c457600080fd5b8201836020820111156105d657600080fd5b803590602001918460018302840111600160201b831117156105f757600080fd5b919390929091602081019035600160201b81111561061457600080fd5b82018360208201111561062657600080fd5b803590602001918460018302840111600160201b8311171561064757600080fd5b5090925090506110cc565b34801561065e57600080fd5b5061014461137d565b34801561067357600080fd5b506101446113a1565b34801561068857600080fd5b5061027d6113c5565b34801561069d57600080fd5b506101446113e9565b3480156106b257600080fd5b5061014461140d565b7f8334eb99be0145865eba9889fca2ee920288090caefff4cc776038e20ad9259a81565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107465760405162461bcd60e51b8152600401808060200182810382526032815260200180611c896032913960400191505060405180910390fd5b8482828080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509250606091508190508061078c85611431565b9296509094509250905060018460038111156107a457fe5b14156108065760005b8351811015610804576107fc87308584815181106107c757fe5b60200260200101518785815181106107db57fe5b60200260200101516001600160a01b03166115f9909392919063ffffffff16565b6001016107ad565b505b606080606061084a8b8b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061143192505050565b935093509350507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168360008151811061088857fe5b60200260200101516001600160a01b031614156109b2577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632e1a7d4d836000815181106108db57fe5b60200260200101516040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561091957600080fd5b505af115801561092d573d6000803e3d6000fd5b505050508060008151811061093e57fe5b60200260200101516001600160a01b0316631249c58b8360008151811061096157fe5b60200260200101516040518263ffffffff1660e01b81526004016000604051808303818588803b15801561099457600080fd5b505af11580156109a8573d6000803e3d6000fd5b5050505050610a94565b6109f9836000815181106109c257fe5b6020026020010151826000815181106109d757fe5b6020026020010151846000815181106109ec57fe5b6020026020010151611659565b80600081518110610a0657fe5b60200260200101516001600160a01b031663a0712d6883600081518110610a2957fe5b60200260200101516040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b158015610a6757600080fd5b505af1158015610a7b573d6000803e3d6000fd5b505050506040513d6020811015610a9157600080fd5b50505b505050610aa186826116f6565b610aab86846116f6565b5050505050505050505050565b7f29fa046e79524c3c5ac4c01df692c35e217802b2b13b21121b76cf0ef02b138c81565b7f099f75155f0e997bf83a7993a71d5e7e7540bd386fe1e84643a09ce6b412521981565b7f000000000000000000000000000000000000000000000000000000000000000090565b7ffa7dd04da627f433da73c4355ead9c75682a67a8fc84d3f6170ef0922f402d2481565b7fb9dfbaccbe5cd2a84fdcf1d15f23ef25d23086f5afbaa99516065ed4a5bbc7a381565b7ff658eb804cc1da8af5599b584aaf3d55407a3c721c42641a6a5270e963d782c381565b7f000000000000000000000000000000000000000000000000000000000000000090565b7fdfd5ee0f6067928bf85a7c4430811282840bc99332dda3dab462c02bf95b67cc81565b600060608080806001600160e01b0319881663099f751560e01b1415610e2a576000806000610c3c8a8a8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506117d292505050565b92509250925060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634cae3ad7856040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015610cb157600080fd5b505afa158015610cc5573d6000803e3d6000fd5b505050506040513d6020811015610cdb57600080fd5b505190506001600160a01b038116610d245760405162461bcd60e51b8152600401808060200182810382526028815260200180611cbb6028913960400191505060405180910390fd5b60408051600180825281830190925290602080830190803683370190505097508088600081518110610d5257fe5b6001600160a01b03929092166020928302919091018201526040805160018082528183019092529182810190803683370190505096508287600081518110610d9657fe5b6020908102919091010152604080516001808252818301909252908160200160208202803683370190505095508386600081518110610dd157fe5b6001600160a01b03929092166020928302919091018201526040805160018082528183019092529182810190803683370190505094508185600081518110610e1557fe5b60200260200101818152505050505050611053565b6001600160e01b0319881663c29fa9dd60e01b141561101c576000806000610e878a8a8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506117d292505050565b92509250925060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634cae3ad7856040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015610efc57600080fd5b505afa158015610f10573d6000803e3d6000fd5b505050506040513d6020811015610f2657600080fd5b505190506001600160a01b038116610f6f5760405162461bcd60e51b8152600401808060200182810382526028815260200180611cbb6028913960400191505060405180910390fd5b60408051600180825281830190925290602080830190803683370190505097508388600081518110610f9d57fe5b6001600160a01b03929092166020928302919091018201526040805160018082528183019092529182810190803683370190505096508287600081518110610fe157fe5b6020908102919091010152604080516001808252818301909252908160200160208202803683370190505095508086600081518110610dd157fe5b60405162461bcd60e51b8152600401808060200182810382526027815260200180611c3c6027913960400191505060405180910390fd5b60029450939792965093509350565b60408051808201909152600881526710d3d35413d5539160c21b602082015290565b7f03e38a2bd7063d45c897edeafc330e71657502dd86434d3c37a489caf116af6981565b7f68e30677f607df46e87da13e15b637784cfa62374b653f35ab43d10361a2f83081565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146111335760405162461bcd60e51b8152600401808060200182810382526032815260200180611c896032913960400191505060405180910390fd5b8482828080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509250606091508190508061117985611431565b92965090945092509050600184600381111561119157fe5b14156111be5760005b83518110156111bc576111b487308584815181106107c757fe5b60010161119a565b505b60608060606112028b8b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061143192505050565b935093509350508260008151811061121657fe5b60200260200101516001600160a01b031663db006a758360008151811061123957fe5b60200260200101516040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b15801561127757600080fd5b505af115801561128b573d6000803e3d6000fd5b505050506040513d60208110156112a157600080fd5b505080516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169082906000906112db57fe5b60200260200101516001600160a01b03161415610a94577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0306001600160a01b0316316040518263ffffffff1660e01b81526004016000604051808303818588803b15801561135757600080fd5b505af115801561136b573d6000803e3d6000fd5b5050505050505050610aa186826116f6565b7f848f3a590fb2f9795d1a275009c54c26c53833277c96b90e0ddd01753a1d590681565b7f3377e18acf9e83665eacd6af109261424fca32a298e2fc2e6095ba563fb8390e81565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f1d51f49b5273d9ddbb643dc349fab8d36dbb470209c2ea71033bea49dd311c2781565b7fc29fa9dde84204c2908778afd0613d802d31cf046179b88f6d2b4a4e507ea2d581565b6000606080606084806020019051608081101561144d57600080fd5b815160208301805160405192949293830192919084600160201b82111561147357600080fd5b90830190602082018581111561148857600080fd5b82518660208202830111600160201b821117156114a457600080fd5b82525081516020918201928201910280838360005b838110156114d15781810151838201526020016114b9565b5050505090500160405260200180516040519392919084600160201b8211156114f957600080fd5b90830190602082018581111561150e57600080fd5b82518660208202830111600160201b8211171561152a57600080fd5b82525081516020918201928201910280838360005b8381101561155757818101518382015260200161153f565b5050505090500160405260200180516040519392919084600160201b82111561157f57600080fd5b90830190602082018581111561159457600080fd5b82518660208202830111600160201b821117156115b057600080fd5b82525081516020918201928201910280838360005b838110156115dd5781810151838201526020016115c5565b5050505090500160405250505093509350935093509193509193565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052611653908590611806565b50505050565b60408051636eb1769f60e11b81523060048201526001600160a01b0384811660248301529151839286169163dd62ed3e916044808301926020929190829003018186803b1580156116a957600080fd5b505afa1580156116bd573d6000803e3d6000fd5b505050506040513d60208110156116d357600080fd5b505110156116f1576116f16001600160a01b038416836000196118b7565b505050565b60005b81518110156116f157600082828151811061171057fe5b60200260200101516001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561176457600080fd5b505afa158015611778573d6000803e3d6000fd5b505050506040513d602081101561178e57600080fd5b5051905080156117c9576117c984828585815181106117a957fe5b60200260200101516001600160a01b03166119ca9092919063ffffffff16565b506001016116f9565b60008060008380602001905160608110156117ec57600080fd5b508051602082015160409092015190969195509350915050565b606061185b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611a1c9092919063ffffffff16565b8051909150156116f15780806020019051602081101561187a57600080fd5b50516116f15760405162461bcd60e51b815260040180806020018281038252602a815260200180611ce3602a913960400191505060405180910390fd5b80158061193d575060408051636eb1769f60e11b81523060048201526001600160a01b03848116602483015291519185169163dd62ed3e91604480820192602092909190829003018186803b15801561190f57600080fd5b505afa158015611923573d6000803e3d6000fd5b505050506040513d602081101561193957600080fd5b5051155b6119785760405162461bcd60e51b8152600401808060200182810382526036815260200180611d0d6036913960400191505060405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b1790526116f1908490611806565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526116f1908490611806565b6060611a2b8484600085611a35565b90505b9392505050565b606082471015611a765760405162461bcd60e51b8152600401808060200182810382526026815260200180611c636026913960400191505060405180910390fd5b611a7f85611b91565b611ad0576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310611b0f5780518252601f199092019160209182019101611af0565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114611b71576040519150601f19603f3d011682016040523d82523d6000602084013e611b76565b606091505b5091509150611b86828286611b97565b979650505050505050565b3b151590565b60608315611ba6575081611a2e565b825115611bb65782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611c00578181015183820152602001611be8565b50505050905090810190601f168015611c2d5780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe7061727365417373657473466f724d6574686f643a205f73656c6563746f7220696e76616c6964416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c4f6e6c792074686520496e746567726174696f6e4d616e616765722063616e2063616c6c20746869732066756e6374696f6e7061727365417373657473466f724d6574686f643a20556e737570706f727465642063546f6b656e5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365a2646970667358221220eb468398abf5ccbfe36a765cc369c7007b4006d0281a1058a74cf03866a7706064736f6c634300060c0033';

type CompoundAdapterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CompoundAdapterConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CompoundAdapter__factory extends ContractFactory {
  constructor(...args: CompoundAdapterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _integrationManager: PromiseOrValue<string>,
    _compoundPriceFeed: PromiseOrValue<string>,
    _wethToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<CompoundAdapter> {
    return super.deploy(
      _integrationManager,
      _compoundPriceFeed,
      _wethToken,
      overrides || {},
    ) as Promise<CompoundAdapter>;
  }
  override getDeployTransaction(
    _integrationManager: PromiseOrValue<string>,
    _compoundPriceFeed: PromiseOrValue<string>,
    _wethToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(
      _integrationManager,
      _compoundPriceFeed,
      _wethToken,
      overrides || {},
    );
  }
  override attach(address: string): CompoundAdapter {
    return super.attach(address) as CompoundAdapter;
  }
  override connect(signer: Signer): CompoundAdapter__factory {
    return super.connect(signer) as CompoundAdapter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompoundAdapterInterface {
    return new utils.Interface(_abi) as CompoundAdapterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): CompoundAdapter {
    return new Contract(address, _abi, signerOrProvider) as CompoundAdapter;
  }
}
