/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../common';
import type {
  ParaSwapV4Adapter,
  ParaSwapV4AdapterInterface,
} from '../ParaSwapV4Adapter';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_integrationManager',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_augustusSwapper',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_tokenTransferProxy',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'ADD_TRACKED_ASSETS_SELECTOR',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'APPROVE_ASSETS_SELECTOR',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'CLAIM_REWARDS_AND_REINVEST_SELECTOR',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'CLAIM_REWARDS_AND_SWAP_SELECTOR',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'CLAIM_REWARDS_SELECTOR',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'LEND_AND_STAKE_SELECTOR',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'LEND_SELECTOR',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'REDEEM_SELECTOR',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'REMOVE_TRACKED_ASSETS_SELECTOR',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'STAKE_SELECTOR',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'TAKE_ORDER_SELECTOR',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'UNSTAKE_AND_REDEEM_SELECTOR',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'UNSTAKE_SELECTOR',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getIntegrationManager',
    outputs: [
      {
        internalType: 'address',
        name: 'integrationManager_',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getParaSwapV4AugustusSwapper',
    outputs: [
      {
        internalType: 'address',
        name: 'augustusSwapper_',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getParaSwapV4TokenTransferProxy',
    outputs: [
      {
        internalType: 'address',
        name: 'tokenTransferProxy_',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'identifier',
    outputs: [
      {
        internalType: 'string',
        name: 'identifier_',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: '_selector',
        type: 'bytes4',
      },
      {
        internalType: 'bytes',
        name: '_encodedCallArgs',
        type: 'bytes',
      },
    ],
    name: 'parseAssetsForMethod',
    outputs: [
      {
        internalType: 'enum IIntegrationManager.SpendAssetsHandleType',
        name: 'spendAssetsHandleType_',
        type: 'uint8',
      },
      {
        internalType: 'address[]',
        name: 'spendAssets_',
        type: 'address[]',
      },
      {
        internalType: 'uint256[]',
        name: 'spendAssetAmounts_',
        type: 'uint256[]',
      },
      {
        internalType: 'address[]',
        name: 'incomingAssets_',
        type: 'address[]',
      },
      {
        internalType: 'uint256[]',
        name: 'minIncomingAssetAmounts_',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_vaultProxy',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: '_encodedCallArgs',
        type: 'bytes',
      },
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    name: 'takeOrder',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60e06040523480156200001157600080fd5b50604051620019c3380380620019c383398101604081905262000034916200006f565b6001600160601b0319606093841b811660805291831b821660a05290911b1660c052620000ef565b80516200006981620000d5565b92915050565b6000806000606084860312156200008557600080fd5b60006200009386866200005c565b9350506020620000a6868287016200005c565b9250506040620000b9868287016200005c565b9150509250925092565b60006001600160a01b03821662000069565b620000e081620000c3565b8114620000ec57600080fd5b50565b60805160601c60a05160601c60c05160601c61188f620001346000398061063952806107435250806103d152806107e152508061022252806106a5525061188f6000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806376cc7ac6116100ad578063e27a06b511610071578063e27a06b5146101ef578063e4d90478146101f7578063e7c45690146101ff578063f075399414610207578063f7d882b51461020f57610121565b806376cc7ac61461019e5780637998a1c4146101c2578063863e5ad0146101d7578063b23228cf146101df578063c7308c03146101e757610121565b80633ffc1591116100f45780633ffc15911461016957806340da225d1461017157806340f8cfcf146101795780635ca62b3c146101815780635e21197a1461018957610121565b806303e38a2b14610126578063080456c11461013b578063131461c014610159578063257cb1a314610161575b600080fd5b610139610134366004610ece565b610217565b005b6101436102d3565b6040516101509190611633565b60405180910390f35b6101436102f7565b61014361031b565b61014361033f565b610143610363565b610143610387565b6101436103ab565b6101916103cf565b60405161015091906115ef565b6101b16101ac366004610f7b565b6103f3565b604051610150959493929190611641565b6101ca6105c9565b604051610150919061169d565b6101436105ef565b610143610613565b610191610637565b61014361065b565b61014361067f565b6101916106a3565b6101436106c7565b6101436106eb565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102685760405162461bcd60e51b815260040161025f906116ce565b60405180910390fd5b60008060008060606102af89898080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061070f92505050565b945094509450945094506102c7838387878e8661073d565b50505050505050505050565b7f8334eb99be0145865eba9889fca2ee920288090caefff4cc776038e20ad9259a81565b7f29fa046e79524c3c5ac4c01df692c35e217802b2b13b21121b76cf0ef02b138c81565b7f099f75155f0e997bf83a7993a71d5e7e7540bd386fe1e84643a09ce6b412521981565b7ffa7dd04da627f433da73c4355ead9c75682a67a8fc84d3f6170ef0922f402d2481565b7fb9dfbaccbe5cd2a84fdcf1d15f23ef25d23086f5afbaa99516065ed4a5bbc7a381565b7ff658eb804cc1da8af5599b584aaf3d55407a3c721c42641a6a5270e963d782c381565b7fdfd5ee0f6067928bf85a7c4430811282840bc99332dda3dab462c02bf95b67cc81565b7f000000000000000000000000000000000000000000000000000000000000000090565b600060608080806001600160e01b031988166303e38a2b60e01b1461042a5760405162461bcd60e51b815260040161025f906116ae565b600080600060606104708b8b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061070f92505050565b945094509450509350600167ffffffffffffffff8111801561049157600080fd5b506040519080825280602002602001820160405280156104bb578160200160208202803683370190505b50975082886000815181106104cc57fe5b6001600160a01b0392909216602092830291909101820152604080516001808252818301909252918281019080368337019050509650818760008151811061051057fe5b6020908102919091010152604080516001808252818301909252908160200160208202803683370190505095508060018251038151811061054d57fe5b6020026020010151600001518660008151811061056657fe5b6001600160a01b039290921660209283029190910182015260408051600180825281830190925291828101908036833701905050945083856000815181106105aa57fe5b6020026020010181815250506002985050505050939792965093509350565b60408051808201909152600c81526b1410549057d4d5d05417d58d60a21b602082015290565b7f03e38a2bd7063d45c897edeafc330e71657502dd86434d3c37a489caf116af6981565b7f68e30677f607df46e87da13e15b637784cfa62374b653f35ab43d10361a2f83081565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f848f3a590fb2f9795d1a275009c54c26c53833277c96b90e0ddd01753a1d590681565b7f3377e18acf9e83665eacd6af109261424fca32a298e2fc2e6095ba563fb8390e81565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f1d51f49b5273d9ddbb643dc349fab8d36dbb470209c2ea71033bea49dd311c2781565b7fc29fa9dde84204c2908778afd0613d802d31cf046179b88f6d2b4a4e507ea2d581565b60008060008060608580602001905181019061072b9190610fef565b939a9299509097509550909350915050565b610768867f000000000000000000000000000000000000000000000000000000000000000087610887565b610770610bc9565b604051806101000160405280886001600160a01b03168152602001878152602001868152602001858152602001846001600160a01b0316815260200160405180604001604052806006815260200165656e7a796d6560d01b81525081526020016000151581526020018381525090507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638f00eccb826040518263ffffffff1660e01b815260040161082b919061170e565b602060405180830381600087803b15801561084557600080fd5b505af1158015610859573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087d9190610fd1565b5050505050505050565b604051636eb1769f60e11b815281906001600160a01b0385169063dd62ed3e906108b790309087906004016115fd565b60206040518083038186803b1580156108cf57600080fd5b505afa1580156108e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109079190610fd1565b1015610923576109236001600160a01b03841683600019610928565b505050565b8015806109b05750604051636eb1769f60e11b81526001600160a01b0384169063dd62ed3e9061095e90309086906004016115fd565b60206040518083038186803b15801561097657600080fd5b505afa15801561098a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ae9190610fd1565b155b6109cc5760405162461bcd60e51b815260040161025f906116fe565b6109238363095ea7b360e01b84846040516024016109eb929190611618565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526060610a72826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610aac9092919063ffffffff16565b8051909150156109235780806020019051810190610a909190610f55565b6109235760405162461bcd60e51b815260040161025f906116ee565b6060610abb8484600085610ac5565b90505b9392505050565b606082471015610ae75760405162461bcd60e51b815260040161025f906116be565b610af085610b86565b610b0c5760405162461bcd60e51b815260040161025f906116de565b60006060866001600160a01b03168587604051610b2991906115e3565b60006040518083038185875af1925050503d8060008114610b66576040519150601f19603f3d011682016040523d82523d6000602084013e610b6b565b606091505b5091509150610b7b828286610b90565b979650505050505050565b803b15155b919050565b60608315610b9f575081610abe565b825115610baf5782518084602001fd5b8160405162461bcd60e51b815260040161025f919061169d565b60405180610100016040528060006001600160a01b0316815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160608152602001600015158152602001606081525090565b8035610c2d8161182a565b92915050565b8051610c2d8161182a565b600082601f830112610c4f57600080fd5b8151610c62610c5d82611746565b61171f565b81815260209384019390925082018360005b83811015610ca05781518601610c8a8882610db5565b8452506020928301929190910190600101610c74565b5050505092915050565b600082601f830112610cbb57600080fd5b8151610cc9610c5d82611746565b81815260209384019390925082018360005b83811015610ca05781518601610cf18882610e28565b8452506020928301929190910190600101610cdb565b8051610c2d8161183e565b8035610c2d81611847565b60008083601f840112610d2f57600080fd5b50813567ffffffffffffffff811115610d4757600080fd5b602083019150836001820283011115610d5f57600080fd5b9250929050565b600082601f830112610d7757600080fd5b8151610d85610c5d82611767565b91508082526020830160208301858383011115610da157600080fd5b610dac8382846117e3565b50505092915050565b600060608284031215610dc757600080fd5b610dd1606061171f565b90506000610ddf8484610c33565b8252506020610df084848301610ec3565b602083015250604082015167ffffffffffffffff811115610e1057600080fd5b610e1c84828501610caa565b60408301525092915050565b600060a08284031215610e3a57600080fd5b610e4460a061171f565b90506000610e528484610c33565b8252506020610e6384848301610c33565b6020830152506040610e7784828501610ec3565b604083015250606082015167ffffffffffffffff811115610e9757600080fd5b610ea384828501610d66565b6060830152506080610eb784828501610ec3565b60808301525092915050565b8051610c2d81611850565b600080600080600060608688031215610ee657600080fd5b6000610ef28888610c22565b955050602086013567ffffffffffffffff811115610f0f57600080fd5b610f1b88828901610d1d565b9450945050604086013567ffffffffffffffff811115610f3a57600080fd5b610f4688828901610d1d565b92509250509295509295909350565b600060208284031215610f6757600080fd5b6000610f738484610d07565b949350505050565b600080600060408486031215610f9057600080fd5b6000610f9c8686610d12565b935050602084013567ffffffffffffffff811115610fb957600080fd5b610fc586828701610d1d565b92509250509250925092565b600060208284031215610fe357600080fd5b6000610f738484610ec3565b600080600080600060a0868803121561100757600080fd5b60006110138888610ec3565b955050602061102488828901610ec3565b945050604061103588828901610c33565b935050606061104688828901610ec3565b925050608086015167ffffffffffffffff81111561106357600080fd5b61106f88828901610c3e565b9150509295509295909350565b600061108883836110b4565b505060200190565b6000610abe838361147d565b6000610abe83836114c5565b600061108883836115da565b6110bd816117a2565b82525050565b60006110ce82611795565b6110d88185611799565b93506110e38361178f565b8060005b838110156111115781516110fb888261107c565b97506111068361178f565b9250506001016110e7565b509495945050505050565b600061112782611795565b6111318185611799565b9350836020820285016111438561178f565b8060005b8581101561117d57848403895281516111608582611090565b945061116b8361178f565b60209a909a0199925050600101611147565b5091979650505050505050565b600061119582611795565b61119f8185611799565b9350836020820285016111b18561178f565b8060005b8581101561117d57848403895281516111ce858261109c565b94506111d98361178f565b60209a909a01999250506001016111b5565b60006111f682611795565b6112008185611799565b935061120b8361178f565b8060005b8381101561111157815161122388826110a8565b975061122e8361178f565b92505060010161120f565b6110bd816117ad565b6110bd816117b2565b600061125682611795565b6112608185611799565b93506112708185602086016117e3565b61127981611813565b9093019392505050565b600061128e82611795565b6112988185610b8b565b93506112a88185602086016117e3565b9290920192915050565b6110bd816117d8565b60006112c8602783611799565b7f7061727365417373657473466f724d6574686f643a205f73656c6563746f72208152661a5b9d985b1a5960ca1b602082015260400192915050565b6000611311602683611799565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f8152651c8818d85b1b60d21b602082015260400192915050565b6000611359603283611799565b7f4f6e6c792074686520496e746567726174696f6e4d616e616765722063616e2081527131b0b636103a3434b990333ab731ba34b7b760711b602082015260400192915050565b60006113ad601d83611799565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000815260200192915050565b60006113e6602a83611799565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e8152691bdd081cdd58d8d9595960b21b602082015260400192915050565b6000611432603683611799565b7f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f81527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b602082015260400192915050565b8051600090606084019061149185826110b4565b5060208301516114a460208601826115da565b50604083015184820360408601526114bc828261118a565b95945050505050565b805160009060a08401906114d985826110b4565b5060208301516114ec60208601826110b4565b5060408301516114ff60408601826115da565b5060608301518482036060860152611517828261124b565b915050608083015161152c60808601826115da565b509392505050565b805160009061010084019061154985826110b4565b50602083015161155c60208601826115da565b50604083015161156f60408601826115da565b50606083015161158260608601826115da565b50608083015161159560808601826110b4565b5060a083015184820360a08601526115ad828261124b565b91505060c08301516115c260c0860182611239565b5060e083015184820360e08601526114bc828261111c565b6110bd816117d5565b6000610abe8284611283565b60208101610c2d82846110b4565b6040810161160b82856110b4565b610abe60208301846110b4565b6040810161162682856110b4565b610abe60208301846115da565b60208101610c2d8284611242565b60a0810161164f82886112b2565b818103602083015261166181876110c3565b9050818103604083015261167581866111eb565b9050818103606083015261168981856110c3565b90508181036080830152610b7b81846111eb565b60208082528101610abe818461124b565b60208082528101610c2d816112bb565b60208082528101610c2d81611304565b60208082528101610c2d8161134c565b60208082528101610c2d816113a0565b60208082528101610c2d816113d9565b60208082528101610c2d81611425565b60208082528101610abe8184611534565b60405181810167ffffffffffffffff8111828210171561173e57600080fd5b604052919050565b600067ffffffffffffffff82111561175d57600080fd5b5060209081020190565b600067ffffffffffffffff82111561177e57600080fd5b506020601f91909101601f19160190565b60200190565b5190565b90815260200190565b6000610c2d826117c9565b151590565b6001600160e01b03191690565b80610b8b8161181d565b6001600160a01b031690565b90565b6000610c2d826117bf565b60005b838110156117fe5781810151838201526020016117e6565b8381111561180d576000848401525b50505050565b601f01601f191690565b6004811061182757fe5b50565b611833816117a2565b811461182757600080fd5b611833816117ad565b611833816117b2565b611833816117d556fea2646970667358221220274057b3aec56d0ca741ec99800c44077e6b38ee0df125a3f02872a695443c5364736f6c634300060c0033';

type ParaSwapV4AdapterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ParaSwapV4AdapterConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ParaSwapV4Adapter__factory extends ContractFactory {
  constructor(...args: ParaSwapV4AdapterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _integrationManager: PromiseOrValue<string>,
    _augustusSwapper: PromiseOrValue<string>,
    _tokenTransferProxy: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<ParaSwapV4Adapter> {
    return super.deploy(
      _integrationManager,
      _augustusSwapper,
      _tokenTransferProxy,
      overrides || {},
    ) as Promise<ParaSwapV4Adapter>;
  }
  override getDeployTransaction(
    _integrationManager: PromiseOrValue<string>,
    _augustusSwapper: PromiseOrValue<string>,
    _tokenTransferProxy: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(
      _integrationManager,
      _augustusSwapper,
      _tokenTransferProxy,
      overrides || {},
    );
  }
  override attach(address: string): ParaSwapV4Adapter {
    return super.attach(address) as ParaSwapV4Adapter;
  }
  override connect(signer: Signer): ParaSwapV4Adapter__factory {
    return super.connect(signer) as ParaSwapV4Adapter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ParaSwapV4AdapterInterface {
    return new utils.Interface(_abi) as ParaSwapV4AdapterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): ParaSwapV4Adapter {
    return new Contract(address, _abi, signerOrProvider) as ParaSwapV4Adapter;
  }
}
