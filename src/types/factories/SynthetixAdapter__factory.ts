/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  Overrides,
} from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../common';
import type {
  SynthetixAdapter,
  SynthetixAdapterInterface,
} from '../SynthetixAdapter';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_integrationManager',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_synthetixPriceFeed',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_originator',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_synthetix',
        type: 'address',
      },
      {
        internalType: 'bytes32',
        name: '_trackingCode',
        type: 'bytes32',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'ADD_TRACKED_ASSETS_SELECTOR',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'APPROVE_ASSETS_SELECTOR',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'CLAIM_REWARDS_AND_REINVEST_SELECTOR',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'CLAIM_REWARDS_AND_SWAP_SELECTOR',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'CLAIM_REWARDS_SELECTOR',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'LEND_AND_STAKE_SELECTOR',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'LEND_SELECTOR',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'REDEEM_SELECTOR',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'REMOVE_TRACKED_ASSETS_SELECTOR',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'STAKE_SELECTOR',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'TAKE_ORDER_SELECTOR',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'UNSTAKE_AND_REDEEM_SELECTOR',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'UNSTAKE_SELECTOR',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getIntegrationManager',
    outputs: [
      {
        internalType: 'address',
        name: 'integrationManager_',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getOriginator',
    outputs: [
      {
        internalType: 'address',
        name: 'originator_',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getSynthetix',
    outputs: [
      {
        internalType: 'address',
        name: 'synthetix_',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getSynthetixPriceFeed',
    outputs: [
      {
        internalType: 'address',
        name: 'synthetixPriceFeed_',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getTrackingCode',
    outputs: [
      {
        internalType: 'bytes32',
        name: 'trackingCode_',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'identifier',
    outputs: [
      {
        internalType: 'string',
        name: 'identifier_',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: '_selector',
        type: 'bytes4',
      },
      {
        internalType: 'bytes',
        name: '_encodedCallArgs',
        type: 'bytes',
      },
    ],
    name: 'parseAssetsForMethod',
    outputs: [
      {
        internalType: 'enum IIntegrationManager.SpendAssetsHandleType',
        name: 'spendAssetsHandleType_',
        type: 'uint8',
      },
      {
        internalType: 'address[]',
        name: 'spendAssets_',
        type: 'address[]',
      },
      {
        internalType: 'uint256[]',
        name: 'spendAssetAmounts_',
        type: 'uint256[]',
      },
      {
        internalType: 'address[]',
        name: 'incomingAssets_',
        type: 'address[]',
      },
      {
        internalType: 'uint256[]',
        name: 'minIncomingAssetAmounts_',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_vaultProxy',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: '_encodedCallArgs',
        type: 'bytes',
      },
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    name: 'takeOrder',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x61012060405234801561001157600080fd5b50604051610eee380380610eee833981810160405260a081101561003457600080fd5b508051602082015160408301516060808501516080958601516001600160601b031995831b861690965291811b841660a05290811b831660c0521b1660e0526101005260805160601c60a05160601c60c05160601c60e05160601c61010051610e136100db6000398061082552806109e55250806106665280610c295250806107a95280610c4d52508061080452806109315250806105235280610cdd5250610e136000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806376cc7ac6116100b8578063b23228cf1161007c578063b23228cf146104e8578063e27a06b5146104f0578063e4d90478146104f8578063e7c4569014610500578063f075399414610508578063f7d882b51461051057610137565b806376cc7ac61461029f5780637998a1c414610453578063863e5ad0146104d05780638d064eae146104d857806390956d99146104e057610137565b80633ffc1591116100ff5780633ffc15911461026557806340da225d1461026d57806340f8cfcf1461027557806349f7c02d1461027d5780635ca62b3c1461029757610137565b806303e38a2b1461013c578063080456c11461020c578063131461c01461023157806315c8499e14610239578063257cb1a31461025d575b600080fd5b61020a6004803603606081101561015257600080fd5b6001600160a01b038235169190810190604081016020820135600160201b81111561017c57600080fd5b82018360208201111561018e57600080fd5b803590602001918460018302840111600160201b831117156101af57600080fd5b919390929091602081019035600160201b8111156101cc57600080fd5b8201836020820111156101de57600080fd5b803590602001918460018302840111600160201b831117156101ff57600080fd5b509092509050610518565b005b6102146108e7565b604080516001600160e01b03199092168252519081900360200190f35b61021461090b565b61024161092f565b604080516001600160a01b039092168252519081900360200190f35b610214610953565b610214610977565b61021461099b565b6102146109bf565b6102856109e3565b60408051918252519081900360200190f35b610214610a07565b61031e600480360360408110156102b557600080fd5b6001600160e01b03198235169190810190604081016020820135600160201b8111156102e057600080fd5b8201836020820111156102f257600080fd5b803590602001918460018302840111600160201b8311171561031357600080fd5b509092509050610a2b565b6040518086600381111561032e57fe5b815260200180602001806020018060200180602001858103855289818151815260200191508051906020019060200280838360005b8381101561037b578181015183820152602001610363565b50505050905001858103845288818151815260200191508051906020019060200280838360005b838110156103ba5781810151838201526020016103a2565b50505050905001858103835287818151815260200191508051906020019060200280838360005b838110156103f95781810151838201526020016103e1565b50505050905001858103825286818151815260200191508051906020019060200280838360005b83811015610438578181015183820152602001610420565b50505050905001995050505050505050505060405180910390f35b61045b610be0565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561049557818101518382015260200161047d565b50505050905090810190601f1680156104c25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610214610c03565b610241610c27565b610241610c4b565b610214610c6f565b610214610c93565b610214610cb7565b610241610cdb565b610214610cff565b610214610d23565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461057f5760405162461bcd60e51b8152600401808060200182810382526032815260200180610dac6032913960400191505060405180910390fd5b60008060006105c387878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610d4792505050565b6040805160028082526060808301845296995093975091955090925060208301908036833701905050905082816000815181106105fc57fe5b60200260200101906001600160a01b031690816001600160a01b031681525050838160018151811061062a57fe5b6001600160a01b03928316602091820292909201810191909152604051633c13fa7b60e11b8152600481018281528451602483015284516060947f00000000000000000000000000000000000000000000000000000000000000001693637827f4f6938793928392604490920191858101910280838360005b838110156106bb5781810151838201526020016106a3565b505050509050019250505060006040518083038186803b1580156106de57600080fd5b505afa1580156106f2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561071b57600080fd5b8101908080516040519392919084600160201b82111561073a57600080fd5b90830190602082018581111561074f57600080fd5b82518660208202830111600160201b8211171561076b57600080fd5b82525081516020918201928201910280838360005b83811015610798578181015183820152602001610780565b5050505090500160405250505090507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166391e56b688b836000815181106107e457fe5b602002602001015186856001815181106107fa57fe5b60200260200101517f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006040518763ffffffff1660e01b815260040180876001600160a01b03168152602001868152602001858152602001848152602001836001600160a01b031681526020018281526020019650505050505050602060405180830381600087803b1580156108af57600080fd5b505af11580156108c3573d6000803e3d6000fd5b505050506040513d60208110156108d957600080fd5b505050505050505050505050565b7f8334eb99be0145865eba9889fca2ee920288090caefff4cc776038e20ad9259a81565b7f29fa046e79524c3c5ac4c01df692c35e217802b2b13b21121b76cf0ef02b138c81565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f099f75155f0e997bf83a7993a71d5e7e7540bd386fe1e84643a09ce6b412521981565b7ffa7dd04da627f433da73c4355ead9c75682a67a8fc84d3f6170ef0922f402d2481565b7fb9dfbaccbe5cd2a84fdcf1d15f23ef25d23086f5afbaa99516065ed4a5bbc7a381565b7ff658eb804cc1da8af5599b584aaf3d55407a3c721c42641a6a5270e963d782c381565b7f000000000000000000000000000000000000000000000000000000000000000090565b7fdfd5ee0f6067928bf85a7c4430811282840bc99332dda3dab462c02bf95b67cc81565b600060608080806001600160e01b031988166303e38a2b60e01b14610a815760405162461bcd60e51b8152600401808060200182810382526027815260200180610d856027913960400191505060405180910390fd5b600080600080610ac68b8b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610d4792505050565b6040805160018082528183019092529498509296509094509250602080830190803683370190505097508188600081518110610afe57fe5b6001600160a01b03929092166020928302919091018201526040805160018082528183019092529182810190803683370190505096508087600081518110610b4257fe5b6020908102919091010152604080516001808252818301909252908160200160208202803683370190505095508386600081518110610b7d57fe5b6001600160a01b03929092166020928302919091018201526040805160018082528183019092529182810190803683370190505094508285600081518110610bc157fe5b6020026020010181815250506000985050505050939792965093509350565b6040805180820190915260098152680a6b29ca8908aa892b60bb1b602082015290565b7f03e38a2bd7063d45c897edeafc330e71657502dd86434d3c37a489caf116af6981565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f68e30677f607df46e87da13e15b637784cfa62374b653f35ab43d10361a2f83081565b7f848f3a590fb2f9795d1a275009c54c26c53833277c96b90e0ddd01753a1d590681565b7f3377e18acf9e83665eacd6af109261424fca32a298e2fc2e6095ba563fb8390e81565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f1d51f49b5273d9ddbb643dc349fab8d36dbb470209c2ea71033bea49dd311c2781565b7fc29fa9dde84204c2908778afd0613d802d31cf046179b88f6d2b4a4e507ea2d581565b600080600080848060200190516080811015610d6257600080fd5b508051602082015160408301516060909301519198909750919550935091505056fe7061727365417373657473466f724d6574686f643a205f73656c6563746f7220696e76616c69644f6e6c792074686520496e746567726174696f6e4d616e616765722063616e2063616c6c20746869732066756e6374696f6ea26469706673582212208e54afc8f017369ef033b60849f7594708376c7bfd34283dafe0638f7f5795b864736f6c634300060c0033';

type SynthetixAdapterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SynthetixAdapterConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SynthetixAdapter__factory extends ContractFactory {
  constructor(...args: SynthetixAdapterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _integrationManager: PromiseOrValue<string>,
    _synthetixPriceFeed: PromiseOrValue<string>,
    _originator: PromiseOrValue<string>,
    _synthetix: PromiseOrValue<string>,
    _trackingCode: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<SynthetixAdapter> {
    return super.deploy(
      _integrationManager,
      _synthetixPriceFeed,
      _originator,
      _synthetix,
      _trackingCode,
      overrides || {},
    ) as Promise<SynthetixAdapter>;
  }
  override getDeployTransaction(
    _integrationManager: PromiseOrValue<string>,
    _synthetixPriceFeed: PromiseOrValue<string>,
    _originator: PromiseOrValue<string>,
    _synthetix: PromiseOrValue<string>,
    _trackingCode: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(
      _integrationManager,
      _synthetixPriceFeed,
      _originator,
      _synthetix,
      _trackingCode,
      overrides || {},
    );
  }
  override attach(address: string): SynthetixAdapter {
    return super.attach(address) as SynthetixAdapter;
  }
  override connect(signer: Signer): SynthetixAdapter__factory {
    return super.connect(signer) as SynthetixAdapter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SynthetixAdapterInterface {
    return new utils.Interface(_abi) as SynthetixAdapterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): SynthetixAdapter {
    return new Contract(address, _abi, signerOrProvider) as SynthetixAdapter;
  }
}
