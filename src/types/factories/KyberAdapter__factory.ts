/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../common';
import type { KyberAdapter, KyberAdapterInterface } from '../KyberAdapter';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_integrationManager',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_exchange',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_wethToken',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'ADD_TRACKED_ASSETS_SELECTOR',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'APPROVE_ASSETS_SELECTOR',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'CLAIM_REWARDS_AND_REINVEST_SELECTOR',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'CLAIM_REWARDS_AND_SWAP_SELECTOR',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'CLAIM_REWARDS_SELECTOR',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'LEND_AND_STAKE_SELECTOR',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'LEND_SELECTOR',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'REDEEM_SELECTOR',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'REMOVE_TRACKED_ASSETS_SELECTOR',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'STAKE_SELECTOR',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'TAKE_ORDER_SELECTOR',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'UNSTAKE_AND_REDEEM_SELECTOR',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'UNSTAKE_SELECTOR',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getExchange',
    outputs: [
      {
        internalType: 'address',
        name: 'exchange_',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getIntegrationManager',
    outputs: [
      {
        internalType: 'address',
        name: 'integrationManager_',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getWethToken',
    outputs: [
      {
        internalType: 'address',
        name: 'wethToken_',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'identifier',
    outputs: [
      {
        internalType: 'string',
        name: 'identifier_',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: '_selector',
        type: 'bytes4',
      },
      {
        internalType: 'bytes',
        name: '_encodedCallArgs',
        type: 'bytes',
      },
    ],
    name: 'parseAssetsForMethod',
    outputs: [
      {
        internalType: 'enum IIntegrationManager.SpendAssetsHandleType',
        name: 'spendAssetsHandleType_',
        type: 'uint8',
      },
      {
        internalType: 'address[]',
        name: 'spendAssets_',
        type: 'address[]',
      },
      {
        internalType: 'uint256[]',
        name: 'spendAssetAmounts_',
        type: 'uint256[]',
      },
      {
        internalType: 'address[]',
        name: 'incomingAssets_',
        type: 'address[]',
      },
      {
        internalType: 'uint256[]',
        name: 'minIncomingAssetAmounts_',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_vaultProxy',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: '_encodedCallArgs',
        type: 'bytes',
      },
      {
        internalType: 'bytes',
        name: '_encodedAssetTransferArgs',
        type: 'bytes',
      },
    ],
    name: 'takeOrder',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    stateMutability: 'payable',
    type: 'receive',
  },
];

const _bytecode =
  '0x60e060405234801561001057600080fd5b50604051611cfc380380611cfc8339818101604052606081101561003357600080fd5b50805160208201516040909201516001600160601b0319606092831b811660805292821b831660a052901b1660c05260805160601c60a05160601c60c05160601c611c336100c960003980610835528061087f52806109ce528061103f5280611254525080610d7c52806110bd528061116a528061119152806112c352806112ea5250806105e05280610d105250611c336000f3fe6080604052600436106101185760003560e01c806376cc7ac6116100a0578063e4d9047811610064578063e4d904781461056c578063e7c4569014610581578063f075399414610596578063f7d882b5146105ab578063f807cd22146105c05761011f565b806376cc7ac6146102e25780637998a1c4146104a3578063863e5ad01461052d578063b23228cf14610542578063e27a06b5146105575761011f565b80633ffc1591116100e75780633ffc15911461025d57806340da225d1461027257806340f8cfcf146102875780634c252f911461029c5780635ca62b3c146102cd5761011f565b806303e38a2b14610124578063080456c114610201578063131461c014610233578063257cb1a3146102485761011f565b3661011f57005b600080fd5b34801561013057600080fd5b506101ff6004803603606081101561014757600080fd5b6001600160a01b038235169190810190604081016020820135600160201b81111561017157600080fd5b82018360208201111561018357600080fd5b803590602001918460018302840111600160201b831117156101a457600080fd5b919390929091602081019035600160201b8111156101c157600080fd5b8201836020820111156101d357600080fd5b803590602001918460018302840111600160201b831117156101f457600080fd5b5090925090506105d5565b005b34801561020d57600080fd5b506102166108f4565b604080516001600160e01b03199092168252519081900360200190f35b34801561023f57600080fd5b50610216610918565b34801561025457600080fd5b5061021661093c565b34801561026957600080fd5b50610216610960565b34801561027e57600080fd5b50610216610984565b34801561029357600080fd5b506102166109a8565b3480156102a857600080fd5b506102b16109cc565b604080516001600160a01b039092168252519081900360200190f35b3480156102d957600080fd5b506102166109f0565b3480156102ee57600080fd5b5061036e6004803603604081101561030557600080fd5b6001600160e01b03198235169190810190604081016020820135600160201b81111561033057600080fd5b82018360208201111561034257600080fd5b803590602001918460018302840111600160201b8311171561036357600080fd5b509092509050610a14565b6040518086600381111561037e57fe5b815260200180602001806020018060200180602001858103855289818151815260200191508051906020019060200280838360005b838110156103cb5781810151838201526020016103b3565b50505050905001858103845288818151815260200191508051906020019060200280838360005b8381101561040a5781810151838201526020016103f2565b50505050905001858103835287818151815260200191508051906020019060200280838360005b83811015610449578181015183820152602001610431565b50505050905001858103825286818151815260200191508051906020019060200280838360005b83811015610488578181015183820152602001610470565b50505050905001995050505050505050505060405180910390f35b3480156104af57600080fd5b506104b8610c57565b6040805160208082528351818301528351919283929083019185019080838360005b838110156104f25781810151838201526020016104da565b50505050905090810190601f16801561051f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561053957600080fd5b50610216610c7e565b34801561054e57600080fd5b50610216610ca2565b34801561056357600080fd5b50610216610cc6565b34801561057857600080fd5b50610216610cea565b34801561058d57600080fd5b506102b1610d0e565b3480156105a257600080fd5b50610216610d32565b3480156105b757600080fd5b50610216610d56565b3480156105cc57600080fd5b506102b1610d7a565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461063c5760405162461bcd60e51b8152600401808060200182810382526032815260200180611ac96032913960400191505060405180910390fd5b8482828080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509250606091508190508061068285610d9e565b92965090945092509050600184600381111561069a57fe5b14156106fc5760005b83518110156106fa576106f287308584815181106106bd57fe5b60200260200101518785815181106106d157fe5b60200260200101516001600160a01b0316610f66909392919063ffffffff16565b6001016106a3565b505b6000806000806107418e8e8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610fc692505050565b93509350935093506000610831836001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561078757600080fd5b505afa15801561079b573d6000803e3d6000fd5b505050506040513d60208110156107b157600080fd5b50516040805163313ce56760e01b8152905160ff9092169185916001600160a01b038a169163313ce56791600480820192602092909190829003018186803b1580156107fc57600080fd5b505afa158015610810573d6000803e3d6000fd5b505050506040513d602081101561082657600080fd5b505160ff1687611003565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b0316141561087d5761087885838361103d565b6108ce565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316856001600160a01b031614156108c257610878838383611164565b6108ce858484846112bd565b50505050506108dd86826113aa565b6108e786846113aa565b5050505050505050505050565b7f8334eb99be0145865eba9889fca2ee920288090caefff4cc776038e20ad9259a81565b7f29fa046e79524c3c5ac4c01df692c35e217802b2b13b21121b76cf0ef02b138c81565b7f099f75155f0e997bf83a7993a71d5e7e7540bd386fe1e84643a09ce6b412521981565b7ffa7dd04da627f433da73c4355ead9c75682a67a8fc84d3f6170ef0922f402d2481565b7fb9dfbaccbe5cd2a84fdcf1d15f23ef25d23086f5afbaa99516065ed4a5bbc7a381565b7ff658eb804cc1da8af5599b584aaf3d55407a3c721c42641a6a5270e963d782c381565b7f000000000000000000000000000000000000000000000000000000000000000090565b7fdfd5ee0f6067928bf85a7c4430811282840bc99332dda3dab462c02bf95b67cc81565b600060608080806001600160e01b031988166303e38a2b60e01b14610a6a5760405162461bcd60e51b8152600401808060200182810382526027815260200180611a7c6027913960400191505060405180910390fd5b600080600080610aaf8b8b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610fc692505050565b9350935093509350816001600160a01b0316846001600160a01b03161415610b085760405162461bcd60e51b815260040180806020018281038252604e815260200180611afb604e913960600191505060405180910390fd5b60008111610b475760405162461bcd60e51b8152600401808060200182810382526034815260200180611b6a6034913960400191505060405180910390fd5b60408051600180825281830190925290602080830190803683370190505097508188600081518110610b7557fe5b6001600160a01b03929092166020928302919091018201526040805160018082528183019092529182810190803683370190505096508087600081518110610bb957fe5b6020908102919091010152604080516001808252818301909252908160200160208202803683370190505095508386600081518110610bf457fe5b6001600160a01b03929092166020928302919091018201526040805160018082528183019092529182810190803683370190505094508285600081518110610c3857fe5b6020026020010181815250506002985050505050939792965093509350565b60408051808201909152600d81526c4b594245525f4e4554574f524b60981b602082015290565b7f03e38a2bd7063d45c897edeafc330e71657502dd86434d3c37a489caf116af6981565b7f68e30677f607df46e87da13e15b637784cfa62374b653f35ab43d10361a2f83081565b7f848f3a590fb2f9795d1a275009c54c26c53833277c96b90e0ddd01753a1d590681565b7f3377e18acf9e83665eacd6af109261424fca32a298e2fc2e6095ba563fb8390e81565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f1d51f49b5273d9ddbb643dc349fab8d36dbb470209c2ea71033bea49dd311c2781565b7fc29fa9dde84204c2908778afd0613d802d31cf046179b88f6d2b4a4e507ea2d581565b7f000000000000000000000000000000000000000000000000000000000000000090565b60006060806060848060200190516080811015610dba57600080fd5b815160208301805160405192949293830192919084600160201b821115610de057600080fd5b908301906020820185811115610df557600080fd5b82518660208202830111600160201b82111715610e1157600080fd5b82525081516020918201928201910280838360005b83811015610e3e578181015183820152602001610e26565b5050505090500160405260200180516040519392919084600160201b821115610e6657600080fd5b908301906020820185811115610e7b57600080fd5b82518660208202830111600160201b82111715610e9757600080fd5b82525081516020918201928201910280838360005b83811015610ec4578181015183820152602001610eac565b5050505090500160405260200180516040519392919084600160201b821115610eec57600080fd5b908301906020820185811115610f0157600080fd5b82518660208202830111600160201b82111715610f1d57600080fd5b82525081516020918201928201910280838360005b83811015610f4a578181015183820152602001610f32565b5050505090500160405250505093509350935093509193509193565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052610fc090859061148b565b50505050565b600080600080848060200190516080811015610fe157600080fd5b5080516020820151604083015160609093015191989097509195509350915050565b600061103461101685600a86900a61153c565b61102e61102488601261159e565b8590600a0a61153c565b906115f8565b95945050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632e1a7d4d836040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156110a357600080fd5b505af11580156110b7573d6000803e3d6000fd5b505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316637a2a04568385846040518463ffffffff1660e01b815260040180836001600160a01b03168152602001828152602001925050506020604051808303818588803b15801561113257600080fd5b505af1158015611146573d6000803e3d6000fd5b50505050506040513d602081101561115d57600080fd5b5050505050565b61118f837f00000000000000000000000000000000000000000000000000000000000000008461165f565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633bba21dc8484846040518463ffffffff1660e01b815260040180846001600160a01b031681526020018381526020018281526020019350505050602060405180830381600087803b15801561120e57600080fd5b505af1158015611222573d6000803e3d6000fd5b505050506040513d602081101561123857600080fd5b505060408051630d0e30db60e41b815290516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163d0e30db09130319160048082019260009290919082900301818588803b15801561129f57600080fd5b505af11580156112b3573d6000803e3d6000fd5b5050505050505050565b6112e8837f00000000000000000000000000000000000000000000000000000000000000008461165f565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316637409e2eb848487856040518563ffffffff1660e01b815260040180856001600160a01b03168152602001848152602001836001600160a01b03168152602001828152602001945050505050602060405180830381600087803b15801561137857600080fd5b505af115801561138c573d6000803e3d6000fd5b505050506040513d60208110156113a257600080fd5b505050505050565b60005b81518110156114865760008282815181106113c457fe5b60200260200101516001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561141857600080fd5b505afa15801561142c573d6000803e3d6000fd5b505050506040513d602081101561144257600080fd5b50519050801561147d5761147d848285858151811061145d57fe5b60200260200101516001600160a01b03166116f79092919063ffffffff16565b506001016113ad565b505050565b60606114e0826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166117499092919063ffffffff16565b805190915015611486578080602001905160208110156114ff57600080fd5b50516114865760405162461bcd60e51b815260040180806020018281038252602a815260200180611b9e602a913960400191505060405180910390fd5b60008261154b57506000611598565b8282028284828161155857fe5b04146115955760405162461bcd60e51b8152600401808060200182810382526021815260200180611b496021913960400191505060405180910390fd5b90505b92915050565b600082820183811015611595576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600080821161164e576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b81838161165757fe5b049392505050565b60408051636eb1769f60e11b81523060048201526001600160a01b0384811660248301529151839286169163dd62ed3e916044808301926020929190829003018186803b1580156116af57600080fd5b505afa1580156116c3573d6000803e3d6000fd5b505050506040513d60208110156116d957600080fd5b50511015611486576114866001600160a01b03841683600019611762565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261148690849061148b565b60606117588484600085611875565b90505b9392505050565b8015806117e8575060408051636eb1769f60e11b81523060048201526001600160a01b03848116602483015291519185169163dd62ed3e91604480820192602092909190829003018186803b1580156117ba57600080fd5b505afa1580156117ce573d6000803e3d6000fd5b505050506040513d60208110156117e457600080fd5b5051155b6118235760405162461bcd60e51b8152600401808060200182810382526036815260200180611bc86036913960400191505060405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b17905261148690849061148b565b6060824710156118b65760405162461bcd60e51b8152600401808060200182810382526026815260200180611aa36026913960400191505060405180910390fd5b6118bf856119d1565b611910576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b6020831061194f5780518252601f199092019160209182019101611930565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146119b1576040519150601f19603f3d011682016040523d82523d6000602084013e6119b6565b606091505b50915091506119c68282866119d7565b979650505050505050565b3b151590565b606083156119e657508161175b565b8251156119f65782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611a40578181015183820152602001611a28565b50505050905090810190601f168015611a6d5780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe7061727365417373657473466f724d6574686f643a205f73656c6563746f7220696e76616c6964416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c4f6e6c792074686520496e746567726174696f6e4d616e616765722063616e2063616c6c20746869732066756e6374696f6e7061727365417373657473466f724d6574686f643a20696e636f6d696e67417373657420616e64206f7574676f696e6741737365742061737365742063616e6e6f74206265207468652073616d65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f777061727365417373657473466f724d6574686f643a206f7574676f696e674173736574416d6f756e74206d757374206265203e305361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365a2646970667358221220c8606ea36e87cce5825c5109b3163680511dffd45ffa3c3aa1a2343ea12abe8764736f6c634300060c0033';

type KyberAdapterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KyberAdapterConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KyberAdapter__factory extends ContractFactory {
  constructor(...args: KyberAdapterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _integrationManager: PromiseOrValue<string>,
    _exchange: PromiseOrValue<string>,
    _wethToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<KyberAdapter> {
    return super.deploy(
      _integrationManager,
      _exchange,
      _wethToken,
      overrides || {},
    ) as Promise<KyberAdapter>;
  }
  override getDeployTransaction(
    _integrationManager: PromiseOrValue<string>,
    _exchange: PromiseOrValue<string>,
    _wethToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(
      _integrationManager,
      _exchange,
      _wethToken,
      overrides || {},
    );
  }
  override attach(address: string): KyberAdapter {
    return super.attach(address) as KyberAdapter;
  }
  override connect(signer: Signer): KyberAdapter__factory {
    return super.connect(signer) as KyberAdapter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KyberAdapterInterface {
    return new utils.Interface(_abi) as KyberAdapterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): KyberAdapter {
    return new Contract(address, _abi, signerOrProvider) as KyberAdapter;
  }
}
